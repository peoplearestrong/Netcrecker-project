<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@2.36">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@1.4.0"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@1.4.0">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.77">
    <script>pipeline {
   agent any

   stages {
      stage(&apos;Clean Workspace&apos;) {
         steps {
            cleanWs()
            deleteDir()
         }
      }

      stage(&apos;Clone git rep&apos;) {
          steps {
              git &apos;https://github.com/endermAH/Netcrecker-project.git&apos;
          }
      }

      stage(&apos;PostgreSQL installation&apos;) {
          steps {
              ansiColor(&apos;exterm&apos;) {
                  ansiblePlaybook(
                      playbook: &apos;/opt/tomcat/.jenkins/workspace/netcracker/psql-vps-playbook.yml&apos;,
                      inventory: &apos;/opt/tomcat/.jenkins/workspace/netcracker/inventory.ini&apos;,
                      colorized: true
                  )
              }
          }
      }

      stage(&apos;Liferay installation&apos;) {
          steps {
              ansiColor(&apos;exterm&apos;) {
                  ansiblePlaybook(
                      playbook: &apos;/opt/tomcat/.jenkins/workspace/netcracker/liferay-vps-playbook.yml&apos;,
                      inventory: &apos;/opt/tomcat/.jenkins/workspace/netcracker/inventory.ini&apos;,
                      colorized: true
                  )
              }
          }
      }

      stage(&apos;Start Liferay&apos;) {
        steps {
            sh &apos;ssh root@178.128.142.117 &quot;nohup /opt/wildfly/bin/standalone.sh &gt; log.liferay &amp;&quot;&apos;
        }
      }
   }
}</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <authToken>START_PIPELINE</authToken>
  <disabled>false</disabled>
</flow-definition>
